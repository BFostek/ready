{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ready.js"],"names":["f","exports","module","define","amd","window","global","self","this","ryanmorrready","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","observer","selector","callback","MutationObserver","checkMutations","observe","doc","documentElement","childList","subtree","docReady","listener","listeners","push","Array","from","querySelectorAll","forEach","el","splice","disconnect","removeListener","document","test","readyState","addEventListener","matchesFn","reduce","fn","name","mutations","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","mutation","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","element","nodeType","_iterator2","addedNodes","err","return"],"mappings":"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","file":"ready.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\r\n * Common varilables\r\n */\r\nlet observer;\r\nconst listeners = [];\r\nconst doc = window.document;\r\nconst documentElement = doc.documentElement;\r\nlet docReady = /complete|loaded|interactive/.test(doc.readyState);\r\n\r\n/**\r\n * Check if the DOM is already loaded\r\n */\r\nif (!docReady) {\r\n    doc.addEventListener('DOMContentLoaded', () => {\r\n        docReady = true;\r\n        let i = listeners.length;\r\n        while (i--) {\r\n            const listener = listeners[i];\r\n            if (listener.selector === doc) {\r\n                listener.callback.call(doc, doc);\r\n                listeners.splice(i, 1);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/*\r\n * Find the supported version of `matches`\r\n * to use\r\n */\r\nconst matchesFn = [\r\n    'matches',\r\n    'webkitMatchesSelector',\r\n    'msMatchesSelector'\r\n].reduce((fn, name) => {\r\n    if (fn) {\r\n        return fn;\r\n    }\r\n    return name in documentElement ? name : fn;\r\n}, null);\r\n\r\n/*\r\n * Checks if an element matches a given\r\n * CSS selector\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nfunction matches(el, selector) {\r\n    return el[matchesFn](selector);\r\n}\r\n\r\n/*\r\n * Check mutations for added nodes\r\n * that match a selector string and\r\n * invoke the callback function if it\r\n * does\r\n *\r\n * @param {Array} mutations\r\n * @api private\r\n */\r\nfunction checkMutations(mutations) {\r\n    for (const mutation of mutations) {\r\n        for (const element of mutation.addedNodes) {\r\n            listeners.forEach((listener) => {\r\n                if (element.nodeType === 1 && matches(element, listener.selector)) {\r\n                    listener.callback.call(element, element);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n * Remove a listener\r\n *\r\n * @param {Object} listener\r\n * @api private\r\n */\r\nfunction removeListener(listener) {\r\n    let i = listeners.length;\r\n    while (i--) {\r\n        if (listener === listeners[i]) {\r\n            listeners.splice(i, 1);\r\n        }\r\n    }\r\n    if (!listeners.length && observer) {\r\n        observer.disconnect();\r\n        observer = null;\r\n    }\r\n}\r\n\r\n/*\r\n * Add a selector to watch for when a matching\r\n * element becomes available in the DOM\r\n *\r\n * @param {String|Document} selector\r\n * @param {Function} callback\r\n * @return {Function}\r\n * @api public\r\n */\r\nexport default function ready(selector, callback) {\r\n    if (!observer) {\r\n        observer = new MutationObserver(checkMutations);\r\n        observer.observe(doc.documentElement, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    if (selector === doc && docReady) {\r\n        callback.call(doc, doc);\r\n        return () => {};\r\n    }\r\n    const listener = {selector, callback};\r\n    listeners.push(listener);\r\n    if (typeof selector === 'string') {\r\n        Array.from(doc.querySelectorAll(selector)).forEach((el) => callback.call(el, el));\r\n    }\r\n    return () => removeListener(listener);\r\n}\r\n"]}